[{"/Users/moverlee/project/Github/echarts-next-for-react/src/index.tsx":"1"},{"size":3494,"mtime":1608646475326,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},"1s3wbxg","/Users/moverlee/project/Github/echarts-next-for-react/src/index.tsx",["6","7","8","9","10","11","12","13","14"],{"ruleId":"15","severity":1,"message":"16","line":1,"column":1,"nodeType":"17","messageId":"18","endLine":1,"endColumn":54,"fix":"19"},{"ruleId":"15","severity":1,"message":"20","line":2,"column":1,"nodeType":"17","messageId":"18","endLine":2,"endColumn":74,"fix":"21"},{"ruleId":"22","severity":1,"message":"23","line":10,"column":18,"nodeType":"24","messageId":"25","endLine":10,"endColumn":46,"fix":"26"},{"ruleId":"27","severity":1,"message":"28","line":18,"column":20,"nodeType":"29","messageId":"30","endLine":18,"endColumn":26},{"ruleId":"27","severity":1,"message":"31","line":27,"column":17,"nodeType":"24","messageId":"30","endLine":27,"endColumn":25},{"ruleId":"27","severity":1,"message":"32","line":28,"column":14,"nodeType":"24","messageId":"30","endLine":28,"endColumn":20},{"ruleId":"33","severity":1,"message":"34","line":99,"column":13,"nodeType":"35","messageId":"36","endLine":99,"endColumn":26},{"ruleId":"37","severity":1,"message":"38","line":120,"column":6,"nodeType":"39","endLine":120,"endColumn":29,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"41","line":127,"column":6,"nodeType":"39","endLine":127,"endColumn":37,"suggestions":"42"},"@typescript-eslint/consistent-type-imports","Import \"FC\" is only used as types","ImportDeclaration","aImportIsOnlyTypes",{"range":"43","text":"44"},"Import \"EChartsOption\" is only used as types",{"range":"45","text":"46"},"@typescript-eslint/consistent-type-definitions","Use a `type` instead of an `interface`.","Identifier","typeOverInterface",{"range":"47","text":"48"},"@typescript-eslint/ban-types","Don't use `object` as a type. The `object` type is currently hard to use ([see this issue](https://github.com/microsoft/TypeScript/issues/21732)).\nConsider using `Record<string, unknown>` instead, as it allows you to more easily inspect and use the keys.","TSObjectKeyword","bannedTypeMessage","Don't use `Function` as a type. The `Function` type accepts any function-like value.\nIt provides no type safety when calling the function, which can be a common source of bugs.\nIt also accepts things like class declarations, which will throw at runtime as they will not be called with `new`.\nIf you are expecting the function to accept certain arguments, you should explicitly define the function shape.","Don't use `Object` as a type. The `Object` type actually means \"any non-nullish value\", so it is marginally better than `unknown`.\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderChart'. Either include it or remove the dependency array.","ArrayExpression",["49"],"React Hook useEffect has a missing dependency: 'getChartDom'. Either include it or remove the dependency array.",["50"],[0,19],"import type { FC} from 'react';\nimport React, {",[54,85],"import type { EChartsOption} from 'echarts';\nimport { dispose",[388,427],"type EchartsNextForReactCoreProps = ",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},"Update the dependencies array to be: [theme, opts, onEvents, renderChart]",{"range":"55","text":"56"},"Update the dependencies array to be: [style, className, showLoading, getChartDom]",{"range":"57","text":"58"},[2924,2947],"[theme, opts, onEvents, renderChart]",[3063,3094],"[style, className, showLoading, getChartDom]"]